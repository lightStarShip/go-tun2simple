package main

import (
	"encoding/hex"
	"fmt"
	"github.com/lightStarShip/go-tun2simple/core"
)

var (
	tcpRaw = []string{
		"450000410445000040115c500a00000808080808f1a10035002d46d662a9010000010000000000000f6170702d6d6561737572656d656e7403636f6d0000010001",
		"4500003c18810000401148190a00000808080808d54500350028ee46931d010000010000000000000377777706676f6f676c6503636f6d0000010001",
		"450000407fee00004011e0a70a00000808080808c9410035002cf257b2fd01000001000000000000037777770a676f6f676c656170697303636f6d0000410001",
		"45000040647600004011fc1f0a00000808080808d2290035002cb401e8ab01000001000000000000037777770a676f6f676c656170697303636f6d0000010001",
		"45000050987000004011c8150a00000808080808d4610035003c4372efc5010000010000000000000c696e732d7232337473757566036961730d74656e63656e742d636c6f7564036e65740000010001",
		"45000040af9b00004011b0fa0a00000808080808d4ab0035002cf11eb9ec010000010000000000000872656465736c61620667697468756202696f0000410001",
	}
)

func decode(s string) []byte {
	b, err := hex.DecodeString(s)
	if err != nil {
		panic(err)
	}
	return b
}

func main() {
	s := core.Inst()
	sig := make(chan struct{}, 1)
	for _, d := range tcpRaw {
		tcpPayLoad := decode(d)
		n, e := s.InputIpPackets(tcpPayLoad)
		fmt.Println(n, e)
	}

	<-sig
}
